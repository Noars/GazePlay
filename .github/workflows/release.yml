name: Release GazePlay

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']
  workflow_dispatch:
    inputs:
      bump:
        description: 'Version à incrémenter'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch  
    
jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: false
          haskell: false
          large-packages: false
          swap-storage: false

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Download JREs
        run: |
          chmod +x ./gradlew
          ./gradlew --stacktrace --info downloadAndExtractJREs
          chmod -R 777 build/jre
      - name: Setup Git Config
        run: |
          git config --global user.email "ci@gazeplay.net"
          git config --global user.name "GazePlay Automation"
          
      - name: Generate Releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew --stacktrace --info release
          
      # add this for installer 32bits afsr and bera (don't forget to uncomment the lines at the very bottom of the build.gradle file at the root
      # mv gazeplay-afsr-windows-x32*installer.exe gazeplay-afsr-windows-x32-installer.exe
      # mv gazeplay-bera-windows-x32*installer.exe gazeplay-bera-windows-x32-installer.exe
      - name: Rename Releases
        run: |
          cd ./build/distributions/
          mv gazeplay-linux-x64*.tar.gz gazeplay-linux-x64.tar.gz
          mv gazeplay-macos*.tar.gz gazeplay-macos.tar.gz
          mv gazeplay-arm*.tar.gz gazeplay-arm.tar.gz
          mv gazeplay-windows-x64*.zip gazeplay-windows-x64.zip
          mv gazeplay-windows-x64*installer.exe gazeplay-windows-x64-installer.exe
          mv gazeplay-windows-x32*.zip gazeplay-windows-x32.zip
          mv gazeplay-windows-x32*installer.exe gazeplay-windows-x32-installer.exe
          mv gazeplay-afsr-windows-x64*.zip gazeplay-afsr-windows-x64.zip
          mv gazeplay-afsr-windows-x64*installer.exe gazeplay-afsr-windows-x64-installer.exe
          mv gazeplay-afsr-windows-x32*.zip gazeplay-afsr-windows-x32.zip
          mv gazeplay-bera-windows-x64*.zip gazeplay-bera-windows-x64.zip
          mv gazeplay-bera-windows-x64*installer.exe gazeplay-bera-windows-x64-installer.exe
          mv gazeplay-bera-windows-x32*.zip gazeplay-bera-windows-x32.zip
          mv gazeplay-no-jre*.zip gazeplay-no-jre.zip          
          
      - name: Get Env
        run: |
          echo "REPO_NAME=${{ github.repository }}" >> $GITHUB_ENV
          echo "REPO_BASENAME=$(basename ${{ github.repository }})" >> $GITHUB_ENV
          
      - name: New tag
        id: new-tag
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/${{ env.REPO_NAME }}/releases/latest | jq -r .tag_name)
          version="${latest_tag#v}"  # strip leading 'v'
          IFS='.' read -r major minor patch <<< "$version"

          case "$bump" in
            major)
              major=$((major + 1))
              minor=0
              patch=0
              ;;
            minor)
              minor=$((minor + 1))
              patch=0
              ;;
            patch)
              patch=$((patch + 1))
              ;;
            *)
              echo "Option invalide: $bump"
              exit 1
              ;;
          esac

          new_tag="v$major.$minor.$patch"
          echo "tag=$new_tag" >> $GITHUB_OUTPUT
          echo "Dernier tag : $latest_tag"
          echo "Nouveau tag : $new_tag"
          
      # add this to add afsr installer 32bits to the release
      # ./build/distributions/gazeplay-afsr-windows-x32-installer.exe   
      # add this to add bera installer 32bits to the release
      # ./build/distributions/gazeplay-bera-windows-x32-installer.exe
      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.new-tag.outputs.tag }}
          name: ${{ env.REPO_BASENAME }} ${{ steps.new-tag.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: "master"
          prerelease: true
          draft: false
          artifacts: "./build/distributions/gazeplay-linux-x64.tar.gz,./build/distributions/gazeplay-macos.tar.gz,./build/distributions/gazeplay-arm.tar.gz,./build/distributions/gazeplay-windows-x64.zip,./build/distributions/gazeplay-windows-x64-installer.exe,./build/distributions/gazeplay-windows-x32.zip,./build/distributions/gazeplay-windows-x32-installer.exe,./build/distributions/gazeplay-afsr-windows-x64.zip,./build/distributions/gazeplay-afsr-windows-x64-installer.exe,./build/distributions/gazeplay-afsr-windows-x32.zip,./build/distributions/gazeplay-bera-windows-x64.zip,./build/distributions/gazeplay-bera-windows-x64-installer.exe,./build/distributions/gazeplay-bera-windows-x32.zip,./build/distributions/gazeplay-no-jre.zip"
